apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redis-stack.fullname" . }}
  labels:
    {{- include "redis-stack.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "redis-stack.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "redis-stack.name" . }}
        release: {{ .Release.Name }}
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
    spec:
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: {{ include "redis-stack.fullname" . }}-db
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "redis-stack.fullname" . }}-data
      containers:
        - name: redis-stack
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 6379
              protocol: TCP
            - containerPort: 8001
              protocol: TCP
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "redis-stack.fullname" . }}-secret
                  key: redis-password
          volumeMounts:
            - name: db
              mountPath: /redisinsight/
            - name: data
              mountPath: /data
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            capabilities: {}
            privileged: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
