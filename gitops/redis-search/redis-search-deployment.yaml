kind: Deployment
apiVersion: apps/v1
metadata:
  name: redis-stack
  labels:
    app: redis-stack
    app.kubernetes.io/component: redis-stack
    app.kubernetes.io/instance: redis-stack
    app.kubernetes.io/name: redis-stack
    app.kubernetes.io/part-of: redis-stack-app
    app.openshift.io/runtime: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-stack
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: redis-stack
        deployment: redis-stack
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
    spec:
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: redis-db
        - name: data
          persistentVolumeClaim:
            claimName: redis-data
      containers:
        - name: redis-stack
          image: >-
            image-registry.openshift-image-registry.svc:5000/redis-search/redis-stack
          ports:
            - containerPort: 6379
              protocol: TCP
            - containerPort: 8001
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: db
              mountPath: /redisinsight/
            - name: data
              mountPath: /data
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600