kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: 'false'
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'git@github.com:deanpeterson/vector-ask.git'
    deployment.kubernetes.io/revision: '10'
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"quarkus-embeddings:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"quarkus-embeddings\")].image","paused":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  name: quarkus-embeddings
  labels:
    app: quarkus-embeddings
    app.kubernetes.io/component: quarkus-embeddings
    app.kubernetes.io/instance: quarkus-embeddings
    app.kubernetes.io/name: quarkus-embeddings
    app.kubernetes.io/part-of: ai-starter-kit-backend
    app.openshift.io/runtime: java
    app.openshift.io/runtime-version: openjdk-17-ubi8
spec:
  replicas: 1
  selector:
    matchLabels:
      app: quarkus-embeddings
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: quarkus-embeddings
        deployment: quarkus-embeddings
    spec:
      containers:
        - name: quarkus-embeddings
          image: 'image-registry.openshift-image-registry.svc:5000/{{namespace}}/quarkus-embeddings:latest'
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          env:
            - name: openaikey
              value: {{openai.key}}
            - name: strapihost
              value: '{{strapi.host}}'
            - name: strapitoken
              value: {{strapi.token}}
            - name: redis.host
              value: {{redis.host}}
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
